// ==========================================================================
// コメントに関して
// ==========================================================================

// sassのコメント

/*
 * cssのコメントも使用できますがminify時に削除されます
 */

// ==========================================================================
// 変数
// ==========================================================================

$white: #fff;
$font-size: 13px;

.hoge {
  background: $white;
  font-size: $font-size;
}

// 変数はブロックスコープを持たせることができます
.scope {
  $red: #f00;
  background: $red;
}

// 変数の展開
$IMG_PATH: '/assets/img/';
.bg-image {
  background: url(#{$IMG_PATH}bg.jpg); // $IMG_PATHbg.jpgとするとエラー
}

// ==========================================================================
// ネスト
// ==========================================================================

// ネストが深すぎると逆にわかりづらくなる点に注意
.huga {
  .hoge {
    line-height: 1.6; // huga .hoge {}
  }

  &.hoge {
    display: inline; // .huga.hoge {}
  }

  > h1 {
    font-size: 20px; // .huga > h1 {}
  }

  + section {
    margin: 10px 0; // .huga + section {}
  }

  @media screen and (max-width: 640px) {
    /* do sometiong */
  }
}

// &で親セレクタを参照可能

.box {
  width: 400px; // .box {}

  body.top & {
    width: 300px; // body.top .box {}
  }
}

a {
  &::hover {
    opacity: 1;
  }
}

// ==========================================================================
// 演算
// ==========================================================================

// 単位が違うと使えないのでcssのcalc関数を使えばいいです
.box {
  width: 100px - 2px; // 98px
}

.box2 {
  width: calc(100% - 20px);
}

// ==========================================================================
// パーシャル機能
// ==========================================================================

@import 'partial/part'; // importするときはアンダースコア、拡張子は不要

// ==========================================================================
// mixin （関数）
// ==========================================================================

@mixin hoge($color: #fff, $size: 16px) {
  color: $color;
  font-size: $size;
}

.text {
  @include hoge(#000, 20px);
}

.text2 {
  @include hoge(); // 引数を指定しない場合初期値が適用される
}


// ==========================================================================
// extend （継承）
// ==========================================================================

// mediaquery内で継承できない点や、どこから継承してるのかわからなくなる等のリスクがあるので無理に使う必要なし
// 使うなら同じscssファイル内に限定するなどの制約があったほうがいい

.hoge-extend1 {
  font-size: 16px;
}

%hoge-extend2 {
  background: #333;
  border-radius: 6px;
}

.huga-extends {
  @extend .hoge-extend1;
  @extend %hoge-extend2;
}

/*
%を使うと出力しないが、継承できる

.hoge-extend1,
.huga-extends {
  font-size:16px
}

.huga-extends {
  background:#333;
  border-radius:6px
}
*/